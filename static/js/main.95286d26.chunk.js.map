{"version":3,"sources":["photo.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProfileHeader","Row","Col","sm","className","Badge","variant","Ficha","PhotoProfile","InfoContent","id","src","photo","alt","listAbilities","data","map","x","icon","faPhoneAlt","phoneNumber","faHome","address","faAt","email","faCalendarAlt","birthDate","InfoDataAcademic","props","academicsJSX","content","element","title","center","dates","InfoDataLanguages","languagesJSX","language","level","InfoDataExpertise","expertiseJSX","InfoDataWorkExperience","experienceJSX","charge","company","ReactHtmlParser","InfoDataSampleProjects","contentSize","length","sampleProjectsJSX","i","separatorBarJSX","urisJSX","uris","urielement","target","href","faExternalLinkAlt","projectName","scope","technologies","InfoDataKnowledge","Table","striped","bordered","size","faCode","languages","faDatabase","databases","faLinux","operatingSystems","faServer","webServers","faDrupal","cms","faSatelliteDish","protocols","faSyncAlt","integrationSystems","faGithub","controlVersionSystems","InfoDataSources","sourcesJSX","type","uri","HeaderBadge","InfoContainer","componentContent","keyContent","area","InfoContainerBefore","beforeJSX","App","Container","before","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95286d26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo.ffc9f8e5.png\";","import React from 'react';\n//import logo from './logo.svg';\nimport photo from './photo.png';\nimport './App.css';\n\nimport ReactHtmlParser from 'react-html-parser';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Badge from 'react-bootstrap/Badge';\nimport Table from 'react-bootstrap/Table';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhoneAlt, faHome, faAt, faCalendarAlt, faExternalLinkAlt, faCode, faDatabase, faServer, faSyncAlt, faSatelliteDish } from '@fortawesome/free-solid-svg-icons';\nimport { faDrupal, faGithub, faLinux } from '@fortawesome/free-brands-svg-icons';\n\nimport * as data from './data.json';\n\n\n\nfunction ProfileHeader(){\n  return(\n    <Row>\n    <Col sm={8}><h1 className=\"title-header\">Rafael Flores Hern&aacute;ndez </h1></Col>\n    <Col><h3 className=\"title-badge\"><Badge variant=\"secondary\">IT Project Manager</Badge></h3></Col>\n    </Row>\n  );\n}\n\n\n\n/* Left Column Components */\nfunction Ficha(){\n  return (\n    <>\n      <PhotoProfile />\n      <InfoContent />\n    </>\n\n  );\n}\n\nfunction PhotoProfile(){\n  return(\n    <Row>\n      <Col id=\"col-no-padding\"><img className=\"profile-photo reflectBelow\" src={photo} alt=\"Profile\"/></Col>\n    </Row>\n  );\n}\n\nfunction InfoContent(){\n\n  let listAbilities = data.abilities.map((x) => <li>{x}</li>);\n \n   return(\n      <>\n        <Row>\n          <Col>\n            <h3>Personal Info.</h3>\n            <p><FontAwesomeIcon icon={faPhoneAlt} /> {data.personalInfo.phoneNumber}</p>\n            <p><FontAwesomeIcon icon={faHome} /> {data.personalInfo.address}</p>\n            <p><FontAwesomeIcon icon={faAt} /> {data.personalInfo.email}</p>\n            <p><FontAwesomeIcon icon={faCalendarAlt} /> {data.personalInfo.birthDate}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h3>Abilities</h3>\n            <ul id=\"ul-reduce-padding\">\n            {listAbilities}\n            </ul>\n          </Col>\n        </Row>\n      </>\n   );\n }\n/* END Left Column Components */\n\n\n\n/* Right Column Content */\n\n// Create the content for Academic Section\nfunction InfoDataAcademic(props) {\n\n  let academicsJSX = props.content.map(element => {\n        return (\n                <>\n                  <h1 className=\"academic-header\">{element.title}</h1>\n                  <p className=\"academic-center\">{element.center}</p>\n                  <p className=\"academic-dates\">{element.dates}</p>\n                </>\n                );\n  });\n\n  return(\n    <Col>\n      {academicsJSX}\n    </Col>\n  );\n}\n\nfunction InfoDataLanguages(props) {\n\n  let languagesJSX = props.content.map(element => {\n                        return (\n                                <Row>\n                                  <Col sm={3}><p>{element.language}</p></Col>\n                                  <Col>{element.level}</Col>\n                                </Row>\n                                );\n                      });\n\n  return(\n    <Col>\n      {languagesJSX}\n    </Col>\n  );\n}\n\nfunction InfoDataExpertise (props){\n\n  let expertiseJSX = props.content.map(element => {\n    return (\n            <li>{element}</li>\n            );\n      });\n\n  return(\n    <Col>\n      <ul>{expertiseJSX}</ul>\n    </Col>\n  );\n}\n\n\nfunction InfoDataWorkExperience (props){\n\n  let experienceJSX = props.content.map(element => {\n    return (\n        <>\n          <h1 className=\"work-experience-header\">{element.charge}</h1>\n          <p className=\"work-experience-company\">{element.company}</p>\n          <p className=\"work-experience-dates\">{element.dates}</p>\n          <div className=\"work-experience-content\">{ReactHtmlParser(element.content)}</div>\n        </>\n      );\n    \n  });\n\n  return(\n    <Col>\n      {experienceJSX}\n    </Col>\n  );\n}\n\nfunction InfoDataSampleProjects (props){\n\n  let contentSize = props.content.length;\n\n  let sampleProjectsJSX = props.content.map((element,i)=> {\n    \n    let separatorBarJSX = <><hr/></>\n\n    if(contentSize === i+1){\n      separatorBarJSX = <></>;\n    }\n    \n    let urisJSX = element.uris.map(urielement => {\n\n      return (\n        <>\n        <a target=\"blank\" href={'https://'+urielement}>{urielement}</a><span id=\"external-link\"><FontAwesomeIcon icon={faExternalLinkAlt} /></span><br/>\n        </>\n\n        );\n\n    });\n\n    return (\n        <>\n          <h1 className=\"work-experience-header\">{element.projectName}</h1>\n          <p className=\"sample-projects-uri\">{urisJSX}</p>\n          <p className=\"work-experience-content\"><b>Scope:</b><br/>{element.scope}</p>\n          <p className=\"work-experience-content\"><b>Technologies:</b><br/>{element.technologies}</p>\n          {separatorBarJSX}\n        </>\n      );\n    \n  });\n\n  return(\n    <Col>\n      {sampleProjectsJSX}\n    </Col>\n  );\n}\n\nfunction InfoDataKnowledge (props){\n\n  return(\n    <Col>\n      <Table striped bordered size=\"m\">\n        <tbody>\n          <tr>\n            <td><FontAwesomeIcon icon={faCode}/><span className=\"span-bold\">Languages</span></td><td>{props.content.languages}</td>\n          </tr>\n          <tr>\n            <td><FontAwesomeIcon icon={faDatabase}/><span className=\"span-bold\">Data Bases</span></td><td>{props.content.databases}</td>\n          </tr>\n          <tr>\n            <td><FontAwesomeIcon icon={faLinux}/><span className=\"span-bold\">Operating Systems</span></td><td>{props.content.operatingSystems}</td>\n          </tr>\n          <tr>\n            <td><FontAwesomeIcon icon={faServer}/><span className=\"span-bold\">Web Servers</span></td><td>{props.content.webServers}</td>\n          </tr>\n          <tr>\n            <td><FontAwesomeIcon icon={faDrupal}/><span className=\"span-bold\">CMS</span></td><td>{props.content.cms}</td>\n          </tr>\n          <tr>\n            <td><FontAwesomeIcon icon={faSatelliteDish}/><span className=\"span-bold\">Protocols</span></td><td>{props.content.protocols}</td>\n          </tr>\n          <tr>\n            <td><FontAwesomeIcon icon={faSyncAlt}/><span className=\"span-bold\">Integration Systems</span></td><td>{props.content.integrationSystems}</td>\n          </tr>\n          <tr>\n            <td><FontAwesomeIcon icon={faGithub}/><span className=\"span-bold\">Control Version Systems</span></td><td>{props.content.controlVersionSystems}</td>\n          </tr>\n        </tbody>\n      </Table>\n    </Col>\n  );\n}\n\n\n\nfunction InfoDataSources (props){\n\n  let sourcesJSX = props.content.map(element => {\n    return (\n          <tr>\n            <td>{element.type}</td><td>{element.title}</td><td><a href={element.uri} target=\"blank\">{element.uri}</a><span id=\"external-link\"><FontAwesomeIcon icon={faExternalLinkAlt} /></span></td>\n          </tr>\n      );\n    \n  });\n\n  return(\n    <Col>\n      <Table striped bordered size=\"m\">\n        <tbody>\n          {sourcesJSX}\n        </tbody>\n      </Table>\n    </Col>\n\n  );\n}\n\n\n\n\n\n\n\n\nfunction HeaderBadge(props){\n  return(\n    <Col><h1 className=\"header-badge\">{props.title}</h1></Col>\n  );\n}\n\nfunction InfoContainer(props){\n\n  let componentContent;\n\n  switch (props.keyContent) {\n    case \"academic\":\n      componentContent = <InfoDataAcademic content={props.content[props.keyContent]}/>;\n      break;\n    case \"languages\":\n      componentContent = <InfoDataLanguages content={props.content[props.keyContent]}/>;\n      break;\n    case \"expertise\":\n      componentContent = <InfoDataExpertise content={props.content[props.keyContent]}/>;\n      break;\n    case \"workExperience\":\n      componentContent = <InfoDataWorkExperience content={props.content[props.keyContent]}/>;\n      break;\n    case \"sampleProjects\":\n      componentContent = <InfoDataSampleProjects content={props.content[props.keyContent]}/>;\n      break;\n    case \"knowledge\":\n      componentContent = <InfoDataKnowledge content={props.content[props.keyContent]}/>;\n    break;\n    case \"sources\":\n      componentContent = <InfoDataSources content={props.content[props.keyContent]}/>;\n    break;\n    default:\n      componentContent = <>VACIO</>;\n      break;\n  }\n\n  return(\n          <Col>\n            <Row><HeaderBadge title={props.area}/></Row>\n            <Row>{componentContent}</Row>\n          </Col>\n        );\n  \n}\n\nfunction InfoContainerBefore(props){\n  let beforeJSX = props.content.map(element => {\n    return (\n        <Col className=\"before-experience\">\n          <h1 className=\"academic-header\">{element.charge}</h1>\n          <p className=\"academic-center\">{element.company}</p><br/>\n          <p className=\"academic-dates\">{element.dates}</p>\n        </Col>\n      );\n    \n  });\n\n  return(\n    <Col id=\"col-before\">\n      <Row><Col sm={1}><p><b>Before</b></p></Col><Col><hr/></Col></Row>\n      <Row>{beforeJSX}</Row>\n    </Col>\n  );\n}\n\n/* END Right Column Content */\n\n\n\nfunction App() {\n\n  \n\n  return (\n    <Container>\n      <Row>\n        <Col id=\"blue-background\"><br/><br/></Col>\n      </Row>\n      <Row>\n        <Col><ProfileHeader /></Col>\n      </Row>\n      <Row>\n        <Col id=\"blue-background\" sm={3}><Ficha /></Col>\n        <Col>\n          <Row>\n            <InfoContainer area=\"Academic\" keyContent=\"academic\" content={data.areas}/>\n            <Col>\n              <Row><InfoContainer area=\"Languages\" keyContent=\"languages\" content={data.areas}/></Row>\n              <Row><InfoContainer area=\"Areas of Expertise\"  keyContent=\"expertise\" content={data.areas}/></Row>    \n            </Col>\n          </Row>\n          <Row><InfoContainer area=\"Work Experience\" keyContent=\"workExperience\" content={data.areas}/></Row>\n          <Row><InfoContainerBefore area=\"Before\" keyContent=\"before\" content={data.areas.before}/></Row>\n          <Row><InfoContainer area=\"Sample Projects\" keyContent=\"sampleProjects\" content={data.areas}/></Row>\n          <Row><InfoContainer area=\"I have worked with...\" keyContent=\"knowledge\" content={data.areas}/></Row>\n          <Row><InfoContainer area=\"Sources\" keyContent=\"sources\" content={data.areas}/></Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}